//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player_Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player_Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player_Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player_Controls"",
    ""maps"": [
        {
            ""name"": ""DefaultMap"",
            ""id"": ""67336047-48de-4fc1-853d-644bfa0a5514"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""eb42d74c-4f5c-439d-9ee5-2fffed2f6e81"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AutoAttack"",
                    ""type"": ""Button"",
                    ""id"": ""4b83e7b7-025f-4c45-a705-5aee07689e5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstAbility"",
                    ""type"": ""Button"",
                    ""id"": ""a1c1c1b8-a831-423f-9fde-3f5235432ca3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondAbility"",
                    ""type"": ""Button"",
                    ""id"": ""6e748d03-1d31-466a-8f28-f4246387c924"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdAbility"",
                    ""type"": ""Button"",
                    ""id"": ""720d8989-acea-4dbe-a766-f1fdd9260353"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ultimate"",
                    ""type"": ""Button"",
                    ""id"": ""a00fd490-0d12-4261-bcde-0a00cc4abf0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9936ba62-a1e1-4ecf-a28a-b5d2db038dbb"",
                    ""path"": ""<AndroidGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6aa0da1b-3731-438b-b96f-fd93e6ab80ad"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AutoAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6145d8d6-921e-44c2-b293-7167a3ecd8b7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AutoAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""056dfe51-ada5-4e7a-8b1d-944334b85075"",
                    ""path"": ""<iOSGameController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ZQSD"",
                    ""id"": ""f6c508a5-1fb9-4516-bcf6-898f4dd597b2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""d319004b-e8ad-483b-b535-ba228ca7697c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""134b8949-5e4f-416c-8810-35d4a84d01c7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""18e3e4ed-350f-47e8-8bcc-950a660342dd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""10f24975-fb9f-4a94-b794-2358b683b000"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""db094b50-0d03-47b6-8ab2-4b2bf613e684"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b1d056fa-c85f-4dfe-946e-9720e138a532"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""25fec323-ee8d-42bf-878e-9de57e4e7251"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0229de3e-06a4-453a-9c83-635e831ecb4f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e8ef94a2-1bca-4dbb-8c60-f81802d140f5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""a5d9e69f-100d-40d2-89f1-928e19a34096"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cf32aa5b-0619-4ed1-975d-b56ad116d9e0"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0a07d9e9-8bd8-4f80-af22-fc650201381f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c17136f7-c01d-4f3f-bfdc-d6f3e83e0440"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9743d10f-054d-46de-83c1-e0af2b74ae1a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1b23635a-5e53-4051-a13d-ba19907592e6"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""825dcc7e-abac-4b63-b33e-62f0bdb6e64f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ccd8e83-bcaf-47ce-acd2-8ff015af7bce"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fddb2c64-7446-4186-a9d0-408c3d147b18"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3c1f5db-5092-42dd-95e3-4ae83ad1e81b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad91db5d-589b-448a-b788-58768de72e7c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""297795b2-f16d-4e00-8ec6-9e0f9c503df9"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef3f1b31-787c-4f3c-bfb7-06e2e2cb8f40"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdAbility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // DefaultMap
        m_DefaultMap = asset.FindActionMap("DefaultMap", throwIfNotFound: true);
        m_DefaultMap_Move = m_DefaultMap.FindAction("Move", throwIfNotFound: true);
        m_DefaultMap_AutoAttack = m_DefaultMap.FindAction("AutoAttack", throwIfNotFound: true);
        m_DefaultMap_FirstAbility = m_DefaultMap.FindAction("FirstAbility", throwIfNotFound: true);
        m_DefaultMap_SecondAbility = m_DefaultMap.FindAction("SecondAbility", throwIfNotFound: true);
        m_DefaultMap_ThirdAbility = m_DefaultMap.FindAction("ThirdAbility", throwIfNotFound: true);
        m_DefaultMap_Ultimate = m_DefaultMap.FindAction("Ultimate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DefaultMap
    private readonly InputActionMap m_DefaultMap;
    private IDefaultMapActions m_DefaultMapActionsCallbackInterface;
    private readonly InputAction m_DefaultMap_Move;
    private readonly InputAction m_DefaultMap_AutoAttack;
    private readonly InputAction m_DefaultMap_FirstAbility;
    private readonly InputAction m_DefaultMap_SecondAbility;
    private readonly InputAction m_DefaultMap_ThirdAbility;
    private readonly InputAction m_DefaultMap_Ultimate;
    public struct DefaultMapActions
    {
        private @Player_Controls m_Wrapper;
        public DefaultMapActions(@Player_Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_DefaultMap_Move;
        public InputAction @AutoAttack => m_Wrapper.m_DefaultMap_AutoAttack;
        public InputAction @FirstAbility => m_Wrapper.m_DefaultMap_FirstAbility;
        public InputAction @SecondAbility => m_Wrapper.m_DefaultMap_SecondAbility;
        public InputAction @ThirdAbility => m_Wrapper.m_DefaultMap_ThirdAbility;
        public InputAction @Ultimate => m_Wrapper.m_DefaultMap_Ultimate;
        public InputActionMap Get() { return m_Wrapper.m_DefaultMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultMapActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultMapActions instance)
        {
            if (m_Wrapper.m_DefaultMapActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnMove;
                @AutoAttack.started -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnAutoAttack;
                @AutoAttack.performed -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnAutoAttack;
                @AutoAttack.canceled -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnAutoAttack;
                @FirstAbility.started -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnFirstAbility;
                @FirstAbility.performed -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnFirstAbility;
                @FirstAbility.canceled -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnFirstAbility;
                @SecondAbility.started -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnSecondAbility;
                @SecondAbility.performed -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnSecondAbility;
                @SecondAbility.canceled -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnSecondAbility;
                @ThirdAbility.started -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnThirdAbility;
                @ThirdAbility.performed -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnThirdAbility;
                @ThirdAbility.canceled -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnThirdAbility;
                @Ultimate.started -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnUltimate;
                @Ultimate.performed -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnUltimate;
                @Ultimate.canceled -= m_Wrapper.m_DefaultMapActionsCallbackInterface.OnUltimate;
            }
            m_Wrapper.m_DefaultMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @AutoAttack.started += instance.OnAutoAttack;
                @AutoAttack.performed += instance.OnAutoAttack;
                @AutoAttack.canceled += instance.OnAutoAttack;
                @FirstAbility.started += instance.OnFirstAbility;
                @FirstAbility.performed += instance.OnFirstAbility;
                @FirstAbility.canceled += instance.OnFirstAbility;
                @SecondAbility.started += instance.OnSecondAbility;
                @SecondAbility.performed += instance.OnSecondAbility;
                @SecondAbility.canceled += instance.OnSecondAbility;
                @ThirdAbility.started += instance.OnThirdAbility;
                @ThirdAbility.performed += instance.OnThirdAbility;
                @ThirdAbility.canceled += instance.OnThirdAbility;
                @Ultimate.started += instance.OnUltimate;
                @Ultimate.performed += instance.OnUltimate;
                @Ultimate.canceled += instance.OnUltimate;
            }
        }
    }
    public DefaultMapActions @DefaultMap => new DefaultMapActions(this);
    public interface IDefaultMapActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAutoAttack(InputAction.CallbackContext context);
        void OnFirstAbility(InputAction.CallbackContext context);
        void OnSecondAbility(InputAction.CallbackContext context);
        void OnThirdAbility(InputAction.CallbackContext context);
        void OnUltimate(InputAction.CallbackContext context);
    }
}
